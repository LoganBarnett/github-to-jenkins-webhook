name: Auto Tag

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  tag:
    name: Auto Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag, or set to v0.0.0 if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Calculate new version
        id: new_version
        run: |
          LATEST_TAG="${{ steps.get_tag.outputs.latest_tag }}"
          
          # Remove 'v' prefix and split into major.minor.patch
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          
          # Increment minor version and reset patch to 0
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="v${MAJOR}.${NEW_MINOR}.0"
          
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.new_version }}"
          
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Create annotated tag with commit message as tag message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          git tag -a "$NEW_VERSION" -m "$COMMIT_MSG"
          
          # Push the tag
          git push origin "$NEW_VERSION"

      - name: Trigger release workflow
        run: |
          echo "Tag ${{ steps.new_version.outputs.new_version }} created successfully"
          echo "Release workflow will be triggered automatically"